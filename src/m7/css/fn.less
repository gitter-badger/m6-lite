/**
变量作为左侧属性的话
.xx(@param, @value...) {
  @{param}: @value;
}
 */

.prefix(@style; @value...) {
  -webkit-@{style}: @value;
    @{style}: @value;
}

.keyframes(@name; @content) {
  @-webkit-keyframes @name { @content();
  }
  @keyframes @name { @content();
  }
}

.setTapColor() {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

.setLeftLine(@lineColor: rgba(0, 0, 0, 0.1)) {
  content: " ";
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  height: 1px;
  border-left: 1px solid @lineColor;
  color: @lineColor;
  .prefix(transform-origin, 0 0);
  .prefix(transform, scaleX(0.5));
}

.setTopLine(@lineColor: rgba(0, 0, 0, 0.1)) {
  content: " ";
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  height: 1px;
  border-top: 1px solid @lineColor;
  color: @lineColor;
  .prefix(transform-origin, 0 0);
  .prefix(transform, scaleY(0.5));
}

.setRightLine(@lineColor: rgba(0, 0, 0, 0.1)) {
  content: " ";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  height: 1px;
  border-right: 1px solid @lineColor;
  color: @lineColor;
  .prefix(transform-origin, 0 0);
  .prefix(transform, scaleX(0.5));
}

.setBottomLine(@lineColor: rgba(0, 0, 0, 0.1)) {
  content: " ";
  position: absolute;
  right: 0;
  bottom: 0;
  left: 0;
  height: 1px;
  border-bottom: 1px solid @lineColor;
  color: @lineColor;
  .prefix(transform-origin, 0 100%);
  .prefix(transform, scaleY(0.5));
}

.arrowDefault(@size; @color; @land) {
  display: inline-block;
  height: @size;
  width: @size;
  border-color: @color;
  border-style: solid;
  -webkit-transform: matrix(0.71, 0.71, -0.71, 0.71, 0, 0);
  transform: matrix(0.71, 0.71, -0.71, 0.71, 0, 0);
  position: relative;
  top: -@land;
}

/** 方向，大小，颜色，厚度 */
.setArrow(@direction; @size; @color; @land) when (@direction = left) {
  .arrowDefault(@size, @color, @land);
  border-width: 0 0 @land @land;
}

.setArrow(@direction; @size; @color; @land) when (@direction = up) {
  .arrowDefault(@size, @color, @land);
  border-width: @land 0 0 @land;
}

.setArrow(@direction; @size; @color; @land) when (@direction = right) {
  .arrowDefault(@size, @color, @land);
  border-width: @land @land 0 0;
}

.setArrow(@direction; @size; @color; @land) when (@direction = down) {
  .arrowDefault(@size, @color, @land);
  border-width: 0 @land @land 0;
}